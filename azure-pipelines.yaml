trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'your-azure-subscription'
  resourceGroup: 'banking-api-rg'
  webAppName: 'banking-transaction-api'
  acrName: 'bankingacr'
  imageName: 'banking-transaction-api'
  JWT_SECRET_KEY: '$(JWT_SECRET_KEY)'
  AZURE_AD_TENANT_ID: '$(AZURE_AD_TENANT_ID)'
  AZURE_AD_CLIENT_ID: '$(AZURE_AD_CLIENT_ID)'
  KEY_VAULT_URL: '$(KEY_VAULT_URL)'
  SENTINEL_ENDPOINT: '$(SENTINEL_ENDPOINT)'
  SENTINEL_TOKEN: '$(SENTINEL_TOKEN)'

steps:
- task: Docker@2
  displayName: 'Build and push Docker image'
  inputs:
    containerRegistry: '$(acrName)'
    repository: '$(imageName)'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    tags: '$(Build.BuildId)'

- script: |
    npm install -g newman
    newman run tests/BankingAPI.postman_collection.json --environment tests/BankingAPI.postman_environment.json
  displayName: 'Run Postman tests with Newman'
  env:
    CUSTOMER_TOKEN: '$(CUSTOMER_TOKEN)'

- script: |
    pip install locust
    locust -f tests/load_test.py --headless --users 100 --spawn-rate 10 --run-time 1m
  displayName: 'Run Locust load tests'
  env:
    CUSTOMER_TOKEN: '$(CUSTOMER_TOKEN)'

- task: AzureWebAppContainer@1
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: '$(azureSubscription)'
    appName: '$(webAppName)'
    resourceGroupName: '$(resourceGroup)'
    imageName: '$(acrName).azurecr.io/$(imageName):$(Build.BuildId)'